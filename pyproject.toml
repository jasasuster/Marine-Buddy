[tool.poetry]
name = "marine-buddy"
version = "0.1.0"
description = ""
authors = ["jasasuster <92645266+jasasuster@users.noreply.github.com>"]
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
flask = "^3.0.2"
requests = "^2.31.0"
pandas = "^2.2.1"
numpy = "^1.26.4"
matplotlib = "^3.8.3"
sklearn-preprocessing = "^0.1.0"
scikit-learn = "^1.4.1.post1"
flask-cors = "^4.0.0"
dvc = "^3.49.0"
dvc-s3 = "^3.1.0"
great-expectations = "^0.18.12"
evidently = "^0.4.19"
mlflow = "^2.12.1"
python-dotenv = "^1.0.1"
dagshub = "^0.3.25"
tensorflow-io-gcs-filesystem = "0.27.0"
tensorflow = "~2.10"
onnxruntime = "^1.17.3"
tf2onnx = "1.14.0"
pymongo = "^4.7.2"
tensorflow-model-optimization = "^0.8.0"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
jupyter = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
fetch_marine_data = "src.data.scripts.fetch_marine_data:main"
preprocess_marine_data = "src.data.scripts.preprocess_marine_data:main"

fetch_weather_data = "src.data.scripts.fetch_weather_data:main"
preprocess_weather_data = "src.data.scripts.preprocess_weather_data:main"

merge_data = "src.data.scripts.merge_data:main"
split_data = "src.data.scripts.split_data:main"
validate_data = "gx.run_my_checkpoint:main"
test_data = "src.validation.test_data:main"
data_drift = "src.validation.data_drift:main"

train_model = "src.models.scripts.train_model:main"
validate_predictions = "src.models.scripts.validate_predictions:main"